syntax = "proto3";

option csharp_namespace = "GrpcCrudService";

package userapi;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";


// The service definition.
service UserService {
  rpc ListUsers(google.protobuf.Empty) returns (ListReply){
    option (google.api.http) ={
      get : "/users"
    };
  }

  rpc GetNewUsers(NewUserMessageRequest) returns (stream UserMessageRequest){
    option (google.api.http) ={
      get : "/newusers"
    };
  }


  rpc GetUser(GetUserMessageRequest) returns (UserMessageReply){
    option (google.api.http) ={
      get : "/user/{id}"
    };
  }

  rpc CreateUser(CreateUserMessageRequest) returns (UserMessageReply){
    option (google.api.http) ={
      post : "/user"
      body:"*"
    };
  }

   rpc UpdateUser(UpdateUserMessageRequest) returns (UserMessageReply){
    option (google.api.http) ={
      put : "/user/{id}"
      body:"*"
    };
  }

  rpc DeleteUser(DeleteUserMessageRequest) returns (google.protobuf.Empty){
    option (google.api.http) ={
      delete : "/user/{id}"
    };
  }
}


/*
service UserService {
  rpc ListUsers(google.protobuf.Empty) returns (ListReply);
  rpc GetUser(GetUserMessageRequest) returns (UserMessageReply);
  rpc CreateUser(CreateUserMessageRequest) returns (UserMessageReply);
  rpc UpdateUser(UpdateUserMessageRequest) returns (UserMessageReply);
  rpc DeleteUser(DeleteUserMessageRequest) returns (google.protobuf.Empty);
}
*/


message UserMessageRequest{
  int32 id = 1;
  string userName=2;
}

message CreateUserMessageRequest{
  int32 id = 1;
  string userName=2;
}

message GetUserMessageRequest{
  int32 id =1;
}

message UpdateUserMessageRequest{
  int32 id=1; 
  string userName=2;
}

message DeleteUserMessageRequest{
  int32 id =1;
}

message ListReply{
  repeated UserMessageReply UserMessages = 1;
}

message UserMessageReply{
  int32 id = 1;
  string userName=2;
}

message NewUserMessageRequest{
}